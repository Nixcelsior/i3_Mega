# 
# Klipper configuration file for Anycubic i3 MEGA S
#
# This config file contains settings of all printer pins (steppers, sensors) for Anycubic i3 mega S with TMC2208 Drivers with stock plug orientation
# If using stock drivers a "!" should be added to the stepper_X dir_pin parameter, and removed from the y, z, z1 and extruder dir_pin parameter 
# Klipper firmware should be compiled for the atmega2560
#
# Config file includes
#  - Original or 2208(2209) rotated by cable drivers
#  - Mesh bed leveling: BLtouch (3DTouch sensor from Triangelab)
#  - Manual meshed bed leveling (commented out)
#  - 'virtual_sdcard' for fast printing without gaps
#  - Beeper through M300 gcode
#  - Pause/Resume through M600 for filament change
#  - START_PRINT/END_PRINT macros should be start and end g-code in slicer
#  - Pressure Advance and Input Shaper configured
#
# 3DTouch code is commented out. Z limit switches are used to home Z axis.
#
# Video covering installation here: https://youtu.be/cAxEIdThDiQ
#
# The latest version of the config reference is also available online at:
# https://www.klipper3d.org/Config_Reference.html


[stepper_x]
step_pin = PF0
dir_pin = PF1
enable_pin = !PD7
rotation_distance = 40
Full_Steps_Per_Rotation = 200
Microsteps = 16
endstop_pin = ^!PE5
position_min = -5
position_endstop = -5
position_max = 210
homing_speed = 30
homing_retract_dist = 5
second_homing_speed = 10


[stepper_y]
step_pin = PF6
dir_pin = !PF7
enable_pin = !PF2
rotation_distance = 40
Full_Steps_Per_Rotation = 200
Microsteps = 16
endstop_pin = ^!PL7
position_endstop = 0
position_max = 210
homing_speed = 50
homing_retract_dist = 5
second_homing_speed = 10


[stepper_z]
step_pin = PL3
dir_pin = !PL1
enable_pin = !PK0
rotation_distance = 8
Full_Steps_Per_Rotation = 200
Microsteps = 16
endstop_pin = probe:z_virtual_endstop
#endstop_pin = ^!PD3
#position_endstop = 0.0
position_max = 210
position_min = -5
homing_speed = 10
homing_retract_dist = 5
second_homing_speed = 3


[stepper_z1]
step_pin = PC1
dir_pin = !PC3
#endstop_pin = ^!PL6
enable_pin = !PC7
rotation_distance = 8
Full_Steps_Per_Rotation = 200
Microsteps = 16


[extruder]
step_pin = PA4
## "" for stock and TMC2208 with reversed plugs
#dir_pin = PA6
dir_pin = !PA6
enable_pin = !PA2
control = pid
rotation_distance = 8
Full_Steps_Per_Rotation = 200
Microsteps = 16
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = PB4
sensor_type = ATC Semitec 104GT-2
sensor_pin = PK5
min_temp = 0
max_temp = 285
max_extrude_only_distance = 150.0
min_extrude_temp = 180
pressure_advance = 0.3624


[heater_fan extruder_fan]
pin = PL5

[heater_bed]
heater_pin = PH5
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PK6
min_temp = 0
max_temp = 110
smooth_time = 1
#control = pid


[fan]
pin = PH6

[mcu]
serial: /dev/serial/by-id/usb-Silicon_Labs_CP2102N_USB_to_UART_Bridge_Controller_4e2be3959767e911876037dc3ca6d3af-if00-port0

[printer]
kinematics = cartesian
max_velocity = 300
max_accel = 10000   #4000
max_z_velocity = 20  #7
max_z_accel = 500  #190
square_corner_velocity = 5


[heater_fan stepstick_fan]
pin = PH4

[bltouch]
sensor_pin = ^PE4
control_pin = PB5
## do your own measurement
x_offset = 29
y_offset = -14
#z_offset = 1.825
stow_on_each_sample = False
probe_with_touch_mode = True

# enable moving befor homing
## put in terminal:
## SET_KINEMATIC_POSITION X=100 Y=100 Z=100
## then move as usual
[force_move]
enable_force_move: True

#Turn ON to adjust home location from 0,0,0
[safe_z_home]
home_xy_position = 100,100
speed = 150
z_hop = 10
z_hop_speed = 10

# bltouch mesh bed leveling
[bed_mesh]
speed = 100
horizontal_move_z = 5
mesh_min = 30,5 #23,28
mesh_max = 200,190 #190,190
probe_count = 10,10
#fade_start = 1.0
#fade_end = 10.0
algorithm = bicubic

[virtual_sdcard]
path: /home/nick/printer_data/gcodes


[output_pin BEEPER_pin]
pin: PC6
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001
scale: 1000


[gcode_macro M300]
# default_parameter_S: 1000
# default_parameter_P: 100
gcode:
    {% set S = params.S|default(1000)|float %}
    {% set P = params.P|default(100)|float %}
    SET_PIN PIN=BEEPER_pin VALUE=1000
    G4 P100
    SET_PIN PIN=BEEPER_pin VALUE=0


[display_status]


# change filament
#[pause_resume]

[firmware_retraction]
retract_length: 6
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 25
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 1
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 10
#   The speed of unretraction, in mm/s. The default is 10 mm/s.


[gcode_macro M600]
# default_parameter_X: 50
# default_parameter_Y: 0
# default_parameter_Z: 10
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-150 F1000
    M300 S299 P200
    M300 S299 P200
    M300 S299 P200
    M300 S299 P200
    M300 S299 P200
    M117 Reload Filament
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  G1 X{x_park} Y{y_park} F6000


[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### end of definitions #####
  G91
  G1 E{E} F2100
  RESTORE_GCODE_STATE NAME=PAUSE_state
  BASE_RESUME


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  TURN_OFF_HEATERS
  G91		  #relative positioning
  # G1 E-.1 
  G10
  G1 Z10 Y50 F1000	#Z axis up 10mm, Y out 50mm
  G90		  #absolute positioning
  G28 X0 	#home X axis
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT

[gcode_macro Heat_Hotend]
gcode:
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=200

[mcu rpi]
serial: /tmp/klipper_host_mcu

[gcode_macro LED_ON]
description: Turn on the LED Relay
gcode:
  {action_call_remote_method("set_device_power",
                             device="light_strip",
                             state="on")}

[gcode_macro LED_OFF]
description: Turn off the LED Relay
gcode:
  {action_call_remote_method("set_device_power",
                             device="light_strip",
                             state="off")}


 
[gcode_macro TOGGLE_LIGHTS]
description: Toogle the LED Relay
gcode:
  {action_call_remote_method("set_device_power",
                             device="light_strip",
                             state="toggle")}
#  SET_Pin Pin=lights VALUE={(not printer['output_pin lights'].value)|int}

#[filament_switch_sensor RunoutSensor]
#switch_pin: rpi:gpio14
#pause_on_runout: false
#runout_gcode: M600


## for Measuring Resonances through Raspberry pi
## https://www.klipper3d.org/Measuring_Resonances.html



[include moonraker_obico_macros.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# pid_kp = 71.563
#*# pid_ki = 2.538
#*# pid_kd = 504.519
#*# control = pid
#*#
#*# [extruder]
#*# pid_kp = 17.050
#*# pid_ki = 0.758
#*# pid_kd = 95.908
#*#
#*# [bltouch]
#*# z_offset = 1.500
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.220000, -0.172500, -0.135000, -0.100000, -0.085000, -0.047500, -0.070000, -0.097500, -0.135000, -0.150000
#*# 	  -0.200000, -0.157500, -0.112500, -0.095000, -0.072500, -0.072500, -0.067500, -0.090000, -0.122500, -0.147500
#*# 	  -0.185000, -0.147500, -0.110000, -0.095000, -0.085000, -0.070000, -0.065000, -0.090000, -0.115000, -0.150000
#*# 	  -0.192500, -0.140000, -0.105000, -0.090000, -0.065000, -0.057500, -0.065000, -0.075000, -0.105000, -0.150000
#*# 	  -0.180000, -0.150000, -0.120000, -0.075000, -0.062500, -0.057500, -0.050000, -0.087500, -0.097500, -0.132500
#*# 	  -0.197500, -0.137500, -0.112500, -0.065000, -0.055000, -0.042500, -0.067500, -0.075000, -0.095000, -0.127500
#*# 	  -0.170000, -0.137500, -0.067500, -0.037500, -0.060000, -0.052500, -0.060000, -0.070000, -0.110000, -0.120000
#*# 	  -0.197500, -0.090000, -0.045000, -0.040000, -0.032500, -0.072500, -0.065000, -0.072500, -0.095000, -0.120000
#*# 	  -0.212500, -0.087500, -0.037500, -0.020000, 0.002500, 0.002500, -0.047500, -0.042500, -0.077500, -0.115000
#*# 	  -0.197500, -0.112500, -0.055000, -0.017500, -0.015000, -0.005000, -0.015000, -0.067500, -0.097500, -0.125000
#*# x_count = 10
#*# y_count = 10
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 30.0
#*# max_x = 199.92
#*# min_y = 5.0
#*# max_y = 189.95000000000005
